@import "breakpoint";
@import "config";
@import "typography";
$heightScreen: 80rem; // 100vh = height of screen = 200 meters of ocean

.wrapper {
  overflow: hidden;
}

/* UI */
.indicator {
  cursor: pointer;
}

%play-pause {
  animation-play-state: paused;
  .in-view & {
    animation-play-state: running;
  }
}

%sprited-thing {
  overflow: hidden;
  position: relative;
  // image that might animate
  &:before {
    content: " ";
    width: 100%;
    height: 100%; // non-animating default
    display: block;
  }
}


.segment {
  min-height: $heightScreen;
  position: relative;
  padding: 2em;
  @include padding-leader(7);
  @include padding-trailer(8);
  @include breakpoint($double_col){
    max-width: $maxSegmentWidth;
    margin: 0 auto;
  }
  @extend %t-medium;
  h1, h2, h3, .content {
    @extend %content-hidden;
  }
  * {
    animation-play-state: paused;
  }
  &.in-view {
    h1, h2, h3, .content {
      @extend %content-revealed;
    }
    .subtitle {
      opacity: .6
    }
    * {
      animation-play-state: running;
    }
  }
}

.segment {
  // undiscovered/default
  // hide facts and challenge

  // discovered
  // show challenge
  // .solving

  // .solved
  // hide challenge, show facts

  // reopened
  // show challenge, hide facts
  // .show-challenge

  // aside from the default state where both are hidden,
  // facts and challenge are always toggling: challenge or facts
}

%content-hidden {
  opacity: 0;
  transition: opacity duration(days) ease(Out);
}

%content-revealed {
  opacity: 1;
}

.puzzle {
  position: relative;
  z-index: 1;
}

.challenge {
  transition-duration: duration(timely);

  // Appearance
  background: $twilight;
  padding: rhythm(4) 1em;
  margin: rhythm(4) -1em;
  // /Appearance

  // undiscovered/default
  @extend %content-hidden;

  // opened/shown
  .solving &,
  .show-challenge & {
    @extend %content-revealed;
  }

  // solved
  .solved & {
    @extend %content-hidden;
  }

}

.facts {
  // unsolved/default
  // unsolved
  // @extend %content-hidden;

  // solved/shown
  .solved & {
    @extend %content-revealed;
  }
  // toggled off
  // .show-challenge & {
  //   @extend %content-hidden;
  // }
}

.progress {}

body, h1, h2, h3, p, ul {
  margin: 0; padding: 0;
}

h1, h2, h3 {
  @extend %fontSpartan;
  @include padding-leader();
}

h1 {
  @extend %t-xxlarge;
  color: color(titleCopy);
}

h2 {
  @extend %t-xlarge;
}

h3 {
  @extend %t-large;
}

.subtitle {
  @extend %fontMerriweatherItalic;
  @extend %t-large;
  @include padding-trailer(3);
}

em {
  @extend %fontMerriweatherItalic;
}

p {
  @extend %fontMerriweather;
  @include padding-trailer(3);
}

@include breakpoint($medium){
  p {
    padding-bottom: 0;
    &:not(:first-of-type) {
      text-indent: 4em;
    }
  }
}

li {
  @extend %fontMerriweather;
  @include padding-trailer();
  margin-left: 4em;
}

.content, .facts, .challenge {
  @include breakpoint($double_col){
    -moz-column-count: 2;
    -moz-column-gap: 2rem;
    column-count: 2;
    column-gap: 2rem;
    ul {
      page-break-inside: avoid;
      break-inside: avoid;
    }
  }
}

blockquote {
  &:first-child {
      padding: 0;
  }
  page-break-inside: avoid;
  break-inside: avoid;
  opacity: .7;
  @extend %t-large;
  @extend %fontMerriweatherItalic;
  @include padding-leader();
  @include padding-trailer();
  margin: 4rem;
  // &:before {
  //     content: "\201C";
  //     @extend %fontSpartan;
  //     position: absolute;
  //     left: -.35em;
  //     font-size: 3em;
  //     opacity: .4;
  //     top: .5em;
  // }
}
cite {
  @extend %t-large;
  font-style: normal;
  display: block;
  margin: 0 4rem;
  text-align: right;
  &:before {content: "\2014"; }
}

#surface {
  background: color(sky);
  color: color(altCopy);
  text-align: center;
  position: relative;
}

#title {
  box-sizing: border-box;
  padding-bottom: 190px;
  min-height: 100vh;
}

.waves {
  background: $surface;
  height: 120px;
  position: absolute;
  left: 0; bottom: 0;
  width: 100%;
  padding-bottom: 60px;
}

.wave {
  position: absolute;
  left: 0; bottom: 60px;
  width: 100%;
  height: 130px;
  .in-zone & {
    animation-name: oceanSurge;
    animation-timing-function: ease(inOut);
    animation-iteration-count: infinite;
    animation-direction: alternate;
  }
  &:before {
    content: " ";
    transform: scale(1.1) translateX(-20px);
    position: absolute;
    left: 0; bottom: 0;
    width: 100%;
    padding: 0 40px;
    height: 120px;
    .in-zone & {
      animation-name: oceanMotion;
      animation-timing-function: linear;
      animation-iteration-count: infinite;
      animation-direction: alternate;
    }
  }
}

.wave-close {
  animation-duration: duration(weeks);
  &:before {
    background: url("../img/wave-close.svg") repeat-x 100% 100%;
    animation-duration: duration(days);
  }
}

.wave-near {
  animation-duration: duration(months);
  &:before {
    background: url("../img/wave-near.svg") repeat-x 100% 100%;
    animation-duration: duration(weeks);
    transform: translateY(-10px);
  }
}

.wave-mid {
  background: $midnight;
  height: 130px;
  &:before {
    background: url("../img/wave-mid.svg") repeat-x 0 10px;
    background-size: 305px 120px;
    animation-duration: duration(months);
  }
}

@keyframes oceanMotion {
  100% { transform: scale(1.1) translateX(30px); }
}

@keyframes oceanSurge {
  100% { transform: translateY(10px); }
}

/* Zones */
#epipelagic {
  background: linear-gradient(to bottom, $surface 0%, #007e84 50%, #0b4960 100%);
  color: color(altCopy);
}
#mesopelagic {
  background: linear-gradient(to bottom, #0b4960 0%, #0b4960 33%, #002351 67%, $abyss 100%);
  color: color(copy);
}
#bathypelagic {
  background: $abyss;
  // background: linear-gradient(to bottom, #0b4960 0%, #002351 100%);
  color: color(copy);
}
#abyssal {
  background: $abyss;
  // background: linear-gradient(to bottom, #002351 0%, $abyss 100%);
  color: color(copy);
}

/* Challenges */
@import "creature-shop";
@import "object-shop";
@import "flashlight-fish";
@import "nautilus";
@import "orange-roughy";
@import "vomiting-shrimp";
@import "hagfish";
@import "disco";

footer {
  background: $abyss;
  @extend %fontMerriweather;
  @extend %t-medium;
  color: color(copy);
  position: fixed;
  bottom: 0; left: 0;
  width: 100%;
  line-height: 2em;
  z-index: 3;
}